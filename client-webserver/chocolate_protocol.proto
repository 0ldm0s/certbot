message chocolatemessage {
	required int32 chocolateversion = 1;
	required string session = 2;

	message SigningRequest {
	     required int64 timestamp = 2;
	     required string recipient = 3;
//	     required string nonce = 4;
	     required string csr = 4;
	     required bytes sig = 5;
	     optional string clientpuzzle = 6;
                      /* server can specify difficulty? */
        }

        enum FailureReason {
             UnsupportedVersion = 0;
	     AbandonedRequest = 1;
             ServerOutage = 2;
             ServerGone = 3;
	     StaleRequest = 4;
	     BadSignature = 5;
	     BadCSR = 6;
	     BadRequest = 7;
	     NeedClientPuzzle = 8;
	     CannotIssueThatName = 9;
	     ExistingCertificate = 10;
	     UnsafeKey = 11;
	     ChallengeFailed = 12;
	     ChallengeTimeout = 13;
        }

	message Failure {
	     required FailureReason cause = 1;
	     optional string URI = 2;  /* for more human-readable information */
//             optional string affectedrequest = 3; /* nonce of the SigningRequest that provoked this failure */
	}

	message Proceed {
	     required int64 timestamp = 1;
             optional int32 polldelay = 2;
        }

	enum ChallengeType {
	     DomainValidateSNI = 0;
	     DomainValidateTLSExt = 1;
	     EmailValidate = 2;
	     Payment = 3;
	}

	message Challenge {
	     required ChallengeType type = 1;
	     required int32 challengeid = 2;
	     optional string name = 3;
	     repeated bytes data = 4;
	     optional string URI = 5;
	     optional bool succeeded = 6;
		      /* from server: true if server ACK success,
			              false if server NAK success,
			              omit if server doesn't know if client
					has attempted yet.

			 from client: true if claiming to be done,
				      false if unable,
				      omit if client hasn't attempted yet. */
	}

	message Success {
	     required string certificate = 1; /* Repeated string certificate? */
	}

	optional SigningRequest request = 3; /* There should just be one request and the request
						must use subject alternate names for every name that
						we want to have signed.  There could still be multiple
						challenges in response -- one or more challenges per
						name. */
	optional Failure failure = 4;  /* Each failure is completely fatal to the protocol, requiring it
                                          to be restarted from the beginning. */
	optional Proceed proceed = 5;
	repeated Challenge challenge = 6;
        repeated Challenge completedchallenge = 7;
	optional Success success = 8;

	optional bool debug = 9;   /* Causes server to return text instead of
  				      message! */
}
